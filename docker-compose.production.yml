volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

  production_django_media: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: event_scheduler_production_django
    volumes:
      - production_django_media:/app/event_scheduler/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: event_scheduler_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: event_scheduler_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'

  redis:
    image: docker.io/redis:6

  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z

  # # My stuff
  # nginx:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/nginx/Dockerfile
  #   image: event_scheduler_production_nginx
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_django_media:/usr/share/nginx/media:ro

  next:
    build:
      context: .
      dockerfile: ./compose/production/next/Dockerfile
    image: event_scheduler_production_next
    depends_on:
      - django
    env_file:
      - ./.envs/.production/.next
    ports:
      - "3001:3001" # Expose port 3001 for Node
      # volumes: # - ./frontend/build:/usr/share/nginx/html:ro # Serve static files

    command: /start
